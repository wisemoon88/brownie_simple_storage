# importing brownie library so that we can use the accounts generated by ganache cli, config is so that we can use the wallet in YAML
# in brownie, no need to open a file and store the file in a variable.  brownie is smart enought to allow for direct importing
from brownie import accounts, config, SimpleStorage, network

# importing the os method so that we can get the private key from the env file
import os


def deploy_simple_storage():
    # how to obtain password:
    # 1.  ganache has a built in account generator which can be accessed by getting the arrray of the account that we are interested in
    # note:  account = get_account is a way for retrieving the account depending on network change
    account = get_account()

    # 2.  another method is to get a external account and save it in a variable.  this external account can be generated from the command line:  brownie accounts new qaamsolidity.  it will reques for an external private key and a password encryption
    # account = accounts.load("qaamsolidity")

    # 3. is from the environment variable
    # account = accounts.add(config["wallets"]["from_key"])
    print(account)

    #  this deploy method allows for direct deployment of contract without the need to build a transaction, signing and sending out
    simple_storage = SimpleStorage.deploy({"from": account})
    stored_value = simple_storage.retrieve()
    print(stored_value)
    transaction = simple_storage.store(15, {"from": account})
    transaction.wait(1)
    updated_stored_value = simple_storage.retrieve()
    print(updated_stored_value)

    # after deploying the contract, it can now be interacted with

    pass


# defining a get account function which will determine which account to use when using different networks
def get_account():
    if network.show_active == "development":
        return accounts[0]
    else:
        return accounts.add(config["wallets"]["from_key"])


# the main function.  when we run script in cmd line it will automatically run main
def main():
    deploy_simple_storage()
